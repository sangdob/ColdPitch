# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'      
        
    # gradle caching
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # gradlew permission denied
    - name: gradlew accessed
      run: chmod +x gradlew
    
    # Spring Boot 어플리케이션 Build (1)
    - name: Spring Boot Clean
      run: ./gradlew clean build --exclude-task test
      
    # Docker Login
    - name: docker login 
      #uses: docker login-action@v2
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    # Docker 이미지 Build
    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_REPOSITORY }}/coldpitch-prod .    

    # Docker Hub push
    - name: docker push
      run: docker push ${{ secrets.DOCKERHUB_REPOSITORY }}/coldpitch-prod
    
    # Docker 이미지 Build (2)
#     - name: docker image build
#       run: docker build -t ${{ secrets.DOCKERHUB_REPOSITORY }}/coldpitch-prod . 
    
    # DockerHub Login (3)
#     - name: docker login 
#       uses: docker/login-action@v2
#       with: 
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}
